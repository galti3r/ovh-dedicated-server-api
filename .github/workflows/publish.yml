name: Publish Docker image

on:
  release:
    types: [published]        # 1) quand tu cliques "Publish release" (pas draft)
  push:
    branches: [ "main" ]      # 3) push/merge sur main
  workflow_dispatch:          # 2) déclenchement manuel
    inputs:
      tag:
        description: "Tag to publish (e.g. v1.2.3). Leave empty to publish latest+sha only."
        required: false
        default: ""
      latest:
        description: "Also tag as 'latest'"
        required: false
        type: boolean
        default: true

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ovh-dedicated-cli
  # motifs acceptés dans le message de commit pour publier sur push main
  PUBLISH_COMMIT_PATTERN: '(\[publish\]|ci:publish|docker:push)'

jobs:
  publish:
    runs-on: ubuntu-latest

    # ✅ Condition unique qui remplace le step "gate"
    if: >
      github.event_name == 'release' ||
      github.event_name == 'workflow_dispatch' ||
      (
        github.event_name == 'push' &&
        github.ref == 'refs/heads/main' &&
        (
          contains(github.event.head_commit.message, '[publish]') ||
          contains(github.event.head_commit.message, 'ci:publish') ||
          contains(github.event.head_commit.message, 'docker:push') ||
          contains(toJSON(github.event.commits), '[publish]') ||
          contains(toJSON(github.event.commits), 'ci:publish') ||
          contains(toJSON(github.event.commits), 'docker:push')
        )
      )

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      # --- Logins ---
      - name: GHCR login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # optionnel: Docker Hub (ne s'exécute que si secrets fournis)
      - name: Probe Docker Hub secrets
        id: probe_dh
        env:
          DH_USER: ${{ secrets.DOCKERHUB_USERNAME }}
          DH_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        shell: bash
        run: |
          if [[ -n "$DH_USER" && -n "$DH_TOKEN" ]]; then
            echo "has=true" >> "$GITHUB_OUTPUT"
          else
            echo "has=false" >> "$GITHUB_OUTPUT"
          fi

      - name: DockerHub login
        if: ${{ steps.probe_dh.outputs.has == 'true' }}
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # --- Tags à publier ---
      - name: Compute tags
        id: tags
        shell: bash
        run: |
          rel_tag=""
          if [[ "${{ github.event_name }}" == "release" && "${{ github.event.action }}" == "published" ]]; then
            rel_tag="${{ github.event.release.tag_name }}"
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ inputs.tag }}" != "" ]]; then
            rel_tag="${{ inputs.tag }}"
          fi
          latest="false"
          if [[ "${{ github.event_name }}" == "release" ]]; then latest="true"; fi
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ inputs.latest }}" == "true" ]]; then latest="true"; fi
          echo "rel_tag=${rel_tag}" >> "$GITHUB_OUTPUT"
          echo "latest=${latest}" >> "$GITHUB_OUTPUT"

      # --- GHCR ---
      - name: Metadata (GHCR)
        id: meta_ghcr
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=short
            type=raw,value=${{ steps.tags.outputs.rel_tag }},enable=${{ steps.tags.outputs.rel_tag != '' }}
            type=raw,value=latest,enable=${{ steps.tags.outputs.latest == 'true' }}

      - name: Build & Push (GHCR)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          labels: ${{ steps.meta_ghcr.outputs.labels }}
          tags: ${{ steps.meta_ghcr.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            REPO=${{ github.repository }}

      # --- Docker Hub (optionnel) ---
      - name: Metadata (Docker Hub)
        if: ${{ steps.probe_dh.outputs.has == 'true' }}
        id: meta_dh
        uses: docker/metadata-action@v5
        with:
          images: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=short
            type=raw,value=${{ steps.tags.outputs.rel_tag }},enable=${{ steps.tags.outputs.rel_tag != '' }}
            type=raw,value=latest,enable=${{ steps.tags.outputs.latest == 'true' }}

      - name: Build & Push (Docker Hub)
        if: ${{ steps.probe_dh.outputs.has == 'true' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          labels: ${{ steps.meta_dh.outputs.labels }}
          tags: ${{ steps.meta_dh.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            REPO=${{ github.repository }}
