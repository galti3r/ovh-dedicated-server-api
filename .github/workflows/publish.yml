name: Publish Docker image

on:
  release:
    types: [published]
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to publish (e.g. v1.2.3). Leave empty to publish latest+sha only."
        required: false
        default: ""
      latest:
        description: "Also tag as 'latest'"
        required: false
        type: boolean
        default: true

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ovh-dedicated-cli
  PUBLISH_COMMIT_PATTERN: '(\[publish\]|ci:publish|docker:push)'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Decide if we should push
        id: gate
        shell: bash
        run: |
          should=false
          if [[ "${{ github.event_name }}" == "release" && "${{ github.event.action }}" == "published" ]]; then
            should=true
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            should=true
          elif [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]]; then
            msg="${{ github.event.head_commit.message }}"
            if echo "$msg" | grep -Eiq "${{ env.PUBLISH_COMMIT_PATTERN }}"; then
              should=true
            fi
          fi
          echo "should=${should}" >> "$GITHUB_OUTPUT"

      - name: Stop early if not publishing
        if: ${{ steps.gate.outputs.should != 'true' }}
        run: echo "Skipping publish." && exit 0

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      # === NEW: probe Docker Hub secrets safely ===
      - name: Probe Docker Hub secrets
        id: probe_dh
        env:
          DH_USER: ${{ secrets.DOCKERHUB_USERNAME }}
          DH_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        shell: bash
        run: |
          if [[ -n "$DH_USER" && -n "$DH_TOKEN" ]]; then
            echo "has=true" >> "$GITHUB_OUTPUT"
          else
            echo "has=false" >> "$GITHUB_OUTPUT"
          fi

      # GHCR login (toujours)
      - name: GHCR login
        if: ${{ steps.gate.outputs.should == 'true' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Docker Hub login (seulement si secrets prÃ©sents)
      - name: DockerHub login
        if: ${{ steps.gate.outputs.should == 'true' && steps.probe_dh.outputs.has == 'true' }}
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Compute extra tags
        id: tags
        shell: bash
        run: |
          rel_tag=""
          if [[ "${{ github.event_name }}" == "release" && "${{ github.event.action }}" == "published" ]]; then
            rel_tag="${{ github.event.release.tag_name }}"
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ inputs.tag }}" != "" ]]; then
            rel_tag="${{ inputs.tag }}"
          fi
          latest="false"
          if [[ "${{ github.event_name }}" == "release" ]]; then latest="true"; fi
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ inputs.latest }}" == "true" ]]; then latest="true"; fi
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]]; then
            msg="${{ github.event.head_commit.message }}"
            if echo "$msg" | grep -Eiq "${{ env.PUBLISH_COMMIT_PATTERN }}"; then
              latest="true"
            fi
          fi
          echo "rel_tag=${rel_tag}" >> "$GITHUB_OUTPUT"
          echo "latest=${latest}" >> "$GITHUB_OUTPUT"

      # Meta GHCR (toujours)
      - name: Metadata (GHCR)
        id: meta_ghcr
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=short
            type=raw,value=${{ steps.tags.outputs.rel_tag }},enable=${{ steps.tags.outputs.rel_tag != '' }}
            type=raw,value=latest,enable=${{ steps.tags.outputs.latest == 'true' }}

      - name: Build & Push (GHCR)
        if: ${{ steps.gate.outputs.should == 'true' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          labels: ${{ steps.meta_ghcr.outputs.labels }}
          tags: ${{ steps.meta_ghcr.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            REPO=${{ github.repository }}

      # Meta Docker Hub (optionnel si secrets OK)
      - name: Metadata (Docker Hub)
        if: ${{ steps.gate.outputs.should == 'true' && steps.probe_dh.outputs.has == 'true' }}
        id: meta_dh
        uses: docker/metadata-action@v5
        with:
          images: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=short
            type=raw,value=${{ steps.tags.outputs.rel_tag }},enable=${{ steps.tags.outputs.rel_tag != '' }}
            type=raw,value=latest,enable=${{ steps.tags.outputs.latest == 'true' }}

      - name: Build & Push (Docker Hub)
        if: ${{ steps.gate.outputs.should == 'true' && steps.probe_dh.outputs.has == 'true' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          labels: ${{ steps.meta_dh.outputs.labels }}
          tags: ${{ steps.meta_dh.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            REPO=${{ github.repository }}
